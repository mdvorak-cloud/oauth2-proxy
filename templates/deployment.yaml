apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oauth2-proxy.fullname" . }}
  labels:
  {{- include "oauth2-proxy.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
  {{- include "oauth2-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- with .Values.podAnnotations }}
      {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
    {{- include "oauth2-proxy.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oauth2-proxy.serviceAccountName" . }}
      securityContext:
      {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: config
          image: busybox
          command:
            - sh
            - -c
            - |
          {{- .Files.Get "init-config.sh" | nindent 14 }}
          volumeMounts:
            - mountPath: /etc/oauth2-proxy
              name: data
            - mountPath: /source/config
              name: config
            - mountPath: /source/secret
              name: secret
      containers:
        - args:
            - --http-address=0.0.0.0:4180
            - --config=/etc/oauth2-proxy/oauth2-proxy.cfg
          name: {{ .Chart.Name }}
          securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /ping
              port: http
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
            successThreshold: 1
            periodSeconds: 10
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/oauth2-proxy
              name: data
              readOnly: true
      volumes:
        - name: data
          emptyDir: { }
        - name: config
          configMap:
            name: {{ include "oauth2-proxy.fullname" . }}
        - name: secret
          secret:
            secretName: {{ .Values.configSecretName | default (include "oauth2-proxy.fullname" .) }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
      {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
  {{- toYaml . | nindent 8 }}
  {{- end }}
